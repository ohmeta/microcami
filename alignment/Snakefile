rule all:
    input:
        "results/alignment.benchmark.txt"


rule soap:
    input:
        r1 = "data/lcasei_R1.fastq",
        r2 = "data/lcasei_R2.fastq"
    output:
        pe = "results/lcasei.pe.soap",
        se = "results/lcasei.se.soap"
    log:
        "results/alignment.soap.log"
    benchmark:
        "results/soap.benchmark.txt"
    params:
        index = "data/lcasei.fa.index"
    threads:
        8
    shell:
        '''
        soap2.22 -D {params.index} -a {input.r1} -b {input.r2} -p {threads} -o {output.pe} -2 {output.se} 2> {log}
        '''


rule bwa:
    input:
        r1 = "data/lcasei_R1.fastq",
        r2 = "data/lcasei_R2.fastq"
    output:
        "results/lcasei.sam"
    log:
        "results/alignment.bwa.log"
    benchmark:
        "results/bwa.benchmark.txt"
    params:
        index = "data/lcasei.fa"
    threads:
        8
    shell:
        '''
        bwa mem -t {threads} {params.index} {input.r1} {input.r2} > {output} 2> {log}
        '''


rule merge:
    input:
        soap = "results/soap.benchmark.txt",
        bwa = "results/bwa.benchmark.txt"
    output:
        alignment = "results/alignment.benchmark.txt"
    run:
        import pandas

        def change(benchmark, method):
            df = pandas.read_table(benchmark)
            df.insert(loc=0, column='aligner', value=[method])
            return df

        soap_df = change(input.soap, "soap")
        bwa_df = change(input.bwa, "bwa")
        output_df = pandas.concat([soap_df, bwa_df])
        output_df.to_csv(output.alignment, sep='\t', index=False)
